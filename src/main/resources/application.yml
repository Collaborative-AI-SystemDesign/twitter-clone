#ver 07.15
spring:
  datasource:
    shard0:
      jdbc-url: jdbc:mysql://localhost:3306/sd_db?serverTimezone=UTC&characterEncoding=UTF-8
      username: sd_user
      password: sd_password
      driver-class-name: com.mysql.cj.jdbc.Driver

    shard1:
      jdbc-url: jdbc:mysql://localhost:3307/sd_db?serverTimezone=UTC&characterEncoding=UTF-8
      username: sd_user
      password: sd_password
      driver-class-name: com.mysql.cj.jdbc.Driver

    shard2:
      jdbc-url: jdbc:mysql://localhost:3308/sd_db?serverTimezone=UTC&characterEncoding=UTF-8
      username: sd_user
      password: sd_password
      driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        show_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect
    show-sql: true

  cache:
    type: redis

  data:
    redis:
      host: localhost
      port: 6379

  cassandra:
    contact-points: ["127.0.0.1:9042", "127.0.0.1:9043", "127.0.0.1:9044"] # 3-node 클러스터 접속점
    port: 9042 # 기본 포트 (각 노드별 포트는 contact-points에서 지정)
    local-datacenter: datacenter1
    keyspace-name: my_test_keyspace
    username: cassandra # 기본 사용자명
    password: cassandra # 기본 패스워드
    session:
      request:
        timeout: 30s # 요청 타임아웃
        consistency: local_quorum # 클러스터에서는 local_quorum 사용
    connection:
      connect-timeout: 20s # 연결 타임아웃
      pool:
        max-requests-per-connection: 32768
    schema-action: create-if-not-exists

  # rabbitmq 설정
  rabbitmq:
    host: localhost # RabbitMQ host ip
    port: 5672 # RabbitMQ port
    username: guest # RabbitMQ 웹 관리 콘솔 아이디
    password: guest # RabbitMQ 웹 관리 콘솔 비밀번호

rabbitmq:
  queue:
    name: sample-queue # 사용할 queue 이름
  exchange:
    name: sample-exchange # 사용할 exchange 이름
  routing:
    key: key

management:
  endpoints:
    web:
      exposure:
        include: "*"

cloud:
  aws:
    s3:
      endpoint: http://localhost:9000   # MinIO API 주소
      bucket: sd_images                 # 위에서 만든 버킷 이름
    credentials:
      access-key: sd_admin            # MinIO Access Key
      secret-key: sd_password            # MinIO Secret Key
    region:
      static: us-east-1                 # AWS region처럼 지정 (MinIO는 의미 없음)
    stack:
      auto: false

  # CloudFormation 관련 설정, 꺼도 무방